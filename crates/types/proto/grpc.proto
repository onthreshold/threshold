syntax = "proto3";

package grpc;

// The node control service
service NodeControl {
    // Create a spending transaction
    rpc SpendFunds(SpendFundsRequest) returns (SpendFundsResponse);
    
    // Start a signing session
    rpc StartSigning(StartSigningRequest) returns (StartSigningResponse);

    // Create a deposit intent
    rpc CreateDepositIntent(CreateDepositIntentRequest) returns (CreateDepositIntentResponse);

    // Get pending deposit intents
    rpc GetPendingDepositIntents(GetPendingDepositIntentsRequest) returns (GetPendingDepositIntentsResponse);

    // Propose a withdrawal
    rpc ProposeWithdrawal(ProposeWithdrawalRequest) returns (ProposeWithdrawalResponse);

    // Confirm a withdrawal
    rpc ConfirmWithdrawal(ConfirmWithdrawalRequest) returns (ConfirmWithdrawalResponse);

    // Check account balance
    rpc CheckBalance(CheckBalanceRequest) returns (CheckBalanceResponse);

    // Development endpoints
    rpc GetChainInfo(GetChainInfoRequest) returns (GetChainInfoResponse);
    rpc TriggerConsensusRound(TriggerConsensusRoundRequest) returns (TriggerConsensusRoundResponse);
    rpc GetLatestBlocks(GetLatestBlocksRequest) returns (GetLatestBlocksResponse);
}

message SpendFundsRequest {
    uint64 amount_satoshis = 1;
    string address_to = 2;
}

message SpendFundsResponse {
    bool success = 1;
    string message = 2;
    string sighash = 3;
}

message GetPendingDepositIntentsRequest {}

message GetPendingDepositIntentsResponse {
    repeated DepositIntent intents = 1;
}

message DepositIntent {
    uint64 amount_satoshis = 2;
    string deposit_tracking_id = 3;
    string deposit_address = 4;
    uint64 timestamp = 5;
}

message CreateDepositIntentRequest {
    string public_key = 1;
    uint64 amount_satoshis = 2;
}

message CreateDepositIntentResponse {
    bool success = 1;
    string message = 2;
    string deposit_tracking_id = 3;
    string deposit_address = 4;
}

message StartSigningRequest {
    string hex_message = 1;
}

message StartSigningResponse {
    bool success = 1;
    string message = 2;
    uint64 sign_id = 3;
}

message ProposeWithdrawalRequest {
    uint64 amount_satoshis = 1;
    string address_to = 2;
    string public_key = 3;
    optional uint32 blocks_to_confirm = 4;
}

message ProposeWithdrawalResponse {
    uint64 quote_satoshis = 1;
    string challenge = 2;
}

message ConfirmWithdrawalRequest {
    string challenge = 1;
    string signature = 2;
}

message ConfirmWithdrawalResponse {
    bool success = 1;
}

message CheckBalanceRequest {
    string address = 1;
}

message CheckBalanceResponse {
    uint64 balance_satoshis = 1;
}

// Development endpoints messages
message GetChainInfoRequest {}

message GetChainInfoResponse {
    uint64 latest_height = 1;
    string latest_block_hash = 2;
    uint64 pending_transactions = 3;
}

message TriggerConsensusRoundRequest {
    bool force_round = 1;
}

message TriggerConsensusRoundResponse {
    bool success = 1;
    string message = 2;
    uint64 round_number = 3;
}

message GetLatestBlocksRequest {
    uint32 count = 1;
}

message BlockInfo {
    uint64 height = 1;
    string hash = 2;
    uint64 timestamp = 3;
    uint32 transaction_count = 4;
}

message GetLatestBlocksResponse {
    repeated BlockInfo blocks = 1;
}